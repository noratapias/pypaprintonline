// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.pypaprint.pedidos.domain;

import com.pypaprint.pedidos.domain.Cliente;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Cliente_Roo_Finder {
    
    public static Long Cliente.countFindClientesByEmailEquals(String email) {
        if (email == null || email.length() == 0) throw new IllegalArgumentException("The email argument is required");
        EntityManager em = Cliente.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Cliente AS o WHERE o.email = :email", Long.class);
        q.setParameter("email", email);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Cliente> Cliente.findClientesByEmailEquals(String email) {
        if (email == null || email.length() == 0) throw new IllegalArgumentException("The email argument is required");
        EntityManager em = Cliente.entityManager();
        TypedQuery<Cliente> q = em.createQuery("SELECT o FROM Cliente AS o WHERE o.email = :email", Cliente.class);
        q.setParameter("email", email);
        return q;
    }
    
    public static TypedQuery<Cliente> Cliente.findClientesByEmailEquals(String email, String sortFieldName, String sortOrder) {
        if (email == null || email.length() == 0) throw new IllegalArgumentException("The email argument is required");
        EntityManager em = Cliente.entityManager();
        String jpaQuery = "SELECT o FROM Cliente AS o WHERE o.email = :email";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Cliente> q = em.createQuery(jpaQuery, Cliente.class);
        q.setParameter("email", email);
        return q;
    }
    
}
